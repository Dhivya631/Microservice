server.port = 8082
spring.application.name=PASSENGER-CONFIG
#database connection
spring.datasource.url=jdbc:h2:mem:passdb
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=user
spring.datasource.password=pass
spring.datasource.platform=h2
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.datasource.initialization-mode=always
spring.resources.static-locations=classpath:/static/
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update

#eureka client
#spring cloud config server
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
eureka.instance.hostname=localhost

#zipkin tracing
spring.zipkin.base-url=http://localhost:9411/
spring.zipkin.enabled=true
spring.sleuth.sampler.probability=1.0

# Micrometer Prometheus configuration

management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true


#access thymleaf
spring.thymeleaf.cache=false
spring.thymeleaf.enabled=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html



#frontend service


#circuitbreaker configuration
spring.jackson.serialization.indent_output=true

# Management Endpoints for Monitoring
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.health.circuitbreakers.enabled=true

# Micrometer Tracing
management.tracing.enabled=true
management.metrics.export.tracing.enabled=true

#zipkin management endpoints
management.zipkin.tracing.endpoint=http://localhost:9411/zipkin
# Resilience4J Circuit Breaker Configuration
#resilience4j.circuitbreaker.configs.default.registerHealthIndicator=true
#resilience4j.circuitbreaker.configs.default.slidingWindowSize=10
#resilience4j.circuitbreaker.configs.default.minimumNumberOfCalls=5
#resilience4j.circuitbreaker.configs.default.permittedNumberOfCallsInHalfOpenState=3
#resilience4j.circuitbreaker.configs.default.automaticTransitionFromOpenToHalfOpenEnabled=true
#resilience4j.circuitbreaker.configs.default.waitDurationInOpenState=5s
#resilience4j.circuitbreaker.configs.default.failureRateThreshold=50
#resilience4j.circuitbreaker.configs.default.eventConsumerBufferSize=10
#spring.main.allow-bean-definition-overriding=true
#resilience4j.circuitbreaker.instances.passengerService.slidingWindowSize=5
#resilience4j.circuitbreaker.instances.passengerService.failureRateThreshold=50
#resilience4j.circuitbreaker.instances.passengerService.waitDurationInOpenState=10000
#resilience4j.circuitbreaker.instances.passengerService.permittedNumberOfCallsInHalfOpenState=3

#log for resttemplate
looging.level.org.springframework.web.client.RestTemplate=DEBUG
logging.level.org.apache.http=DEBUG

resilience4j.circuitbreaker.instances.passengerService.failureRateThreshold=50
resilience4j.circuitbreaker.instances.passengerService.slidingWindowSize=5
resilience4j.circuitbreaker.instances.passengerService.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.passengerService.waitDurationInOpenState=10000
resilience4j.circuitbreaker.instances.passengerService.minimumNumberOfCalls=2
resilience4j.circuitbreaker.instances.passengerService.wait-duration-in-open-state=5s
resilience4j.circuitbreaker.instances.passengerService.register-health-indicator:true

resilience4j.circuitbreaker.instances.flightService.failureRateThreshold=50
resilience4j.circuitbreaker.instances.flightService.slidingWindowSize=5
resilience4j.circuitbreaker.instances.flightService.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.flightService.waitDurationInOpenState=10000
resilience4j.circuitbreaker.instances.flightService.minimumNumberOfCalls=2
resilience4j.circuitbreaker.instances.flightService.wait-duration-in-open-state=5s
resilience4j.circuitbreaker.instances.flightService.register-health-indicator:true
# Resilience4J Retry settings for passengerService
